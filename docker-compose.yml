version: '3.1'
services:
  db:
    image: postgres:11.7-alpine
    volumes:
      - yasc_db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${YASC_DATABASE_PASSWORD}
      POSTGRES_DB: yasc_production
    networks:
      - internal

  yasc-redis:
    image: redis:5.0.8-alpine
    ports:
      - 6380:6380
    command: --port 6380
    networks:
      - internal

  yasc:
    depends_on:
      - db
      - yasc-redis
    image: jorgebarreto/yasc
    ports: 
      - 3000:3000
      - 3001:3001
    environment: 
      RAILS_ENV: production
      YASC_DATABASE_PASSWORD: ${YASC_DATABASE_PASSWORD}
      REDIS_URL: redis://yasc-redis:6380
    networks:
      - default
      - internal
    volumes:
      - certs:/etc/letsencrypt/
    entrypoint: "/bin/sh -c 'cd /usr/src/app && bundle exec rails db:setup; bundle exec rails s'"
    # command: bundle exec rails s

  code-dueler-redis:
    image: redis:5.0.8-alpine
    ports:
      - 6379:6379
    networks:
      - internal
  
  code-dueler-judge:
    image: jorgebarreto/code-dueler-judge:0.4.3
    depends_on: 
      - code-dueler-redis
    ports: 
      - 5005:5005
    networks:
      - internal
    environment:
      NODE_ENV: production
      TESTING_DIR: $PWD/code_judge/test
      CRT_FILE: /etc/letsencrypt/live/jorgebarreto.dev/fullchain.pem
      KEY_FILE: /etc/letsencrypt/live/jorgebarreto.dev/privkey.pem
      SECRET_OR_KEY: ${SECRET_OR_KEY}
      SERVER_URI: https://server:5000
      REDIS_URI: redis://code-dueler-redis
      MONGO_URI: ${WORKER_MONGO_URI}
      PORT: 5005
    volumes:
      - $PWD/code_judge/test:/usr/src/app/test
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/letsencrypt
  
  code-dueler:
    image: jorgebarreto/code-dueler:0.9.3
    depends_on:
      - code-dueler-redis
    ports:
      - 5000:5000
    networks:
      - default
      - internal
    environment: 
      NODE_ENV: production
      HTTPS: 'false'
      CRT_FILE: /etc/letsencrypt/live/jorgebarreto.dev/fullchain.pem
      KEY_FILE: /etc/letsencrypt/live/jorgebarreto.dev/privkey.pem
      REACT_APP_GRAPHQL_URI: https://code-dueler/graphql
      REACT_APP_GRAPHQL_WS_URI: wss://code-dueler/graphql
      SECRET_OR_KEY: ${SECRET_OR_KEY}
      MONGO_URI: ${MONGO_URI}
      REDIS_URI: redis://code-dueler-redis
      REDIS_HOST: code-dueler-redis
      CODE_JDG_URI: http://code-dueler-judge:5005
      DOCKERIZED: 'true'
    volumes:
      - certs:/etc/letsencrypt

  web:
    image: jorgebarreto/web:1.0.8
    depends_on: 
      - "yasc"
      - "code-dueler"
    ports:
      - 80:80
      - 443:443
    volumes:
      - wellknown_webroot:/usr/share/nginx/html/.well-known
      - certs:/etc/letsencrypt/
      - ~/docker_app/web/nginx_logs:/var/log/nginx/

  certbot:
    depends_on: 
      - "web"
    image: certbot/certbot
    volumes: 
      - wellknown_webroot:/www
      - certs:/etc/letsencrypt/
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  yasc_db:
  wellknown_webroot:
  certs:
    external:
      true

networks:
  default:
    external:
      name: webnet
  internal:
